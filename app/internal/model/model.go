// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/v2/os/gtime"
)

// Category is the golang structure for table category.
type Category struct {
	Id          uint        `orm:"id,primary"   json:"id"          description:"分类ID，自增主键"`
	ContentType string      `orm:"content_type" json:"contentType" description:"内容类型：topic, ask, article, reply"`
	Key         string      `orm:"key"          json:"key"         description:"栏目唯一键名，用于程序部分场景硬编码，一般不会用得到"`
	ParentId    uint        `orm:"parent_id"    json:"parentId"    description:"父级分类ID，用于层级管理"`
	UserId      uint        `orm:"user_id"      json:"userId"      description:"创建的用户ID"`
	Name        string      `orm:"name"         json:"name"        description:"分类名称"`
	Sort        uint        `orm:"sort"         json:"sort"        description:"排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶"`
	Thumb       string      `orm:"thumb"        json:"thumb"       description:"封面图"`
	Brief       string      `orm:"brief"        json:"brief"       description:"简述"`
	Content     string      `orm:"content"      json:"content"     description:"详细介绍"`
	CreatedAt   *gtime.Time `orm:"created_at"   json:"createdAt"   description:"创建时间"`
	UpdatedAt   *gtime.Time `orm:"updated_at"   json:"updatedAt"   description:"修改时间"`
}

// Content is the golang structure for table content.
type Content struct {
	Id             uint        `orm:"id,primary"       json:"id"             description:"自增ID"`
	Key            string      `orm:"key"              json:"key"            description:"唯一键名，用于程序硬编码，一般不常用"`
	Type           string      `orm:"type"             json:"type"           description:"内容模型: topic, ask, article等，具体由程序定义"`
	CategoryId     uint        `orm:"category_id"      json:"categoryId"     description:"栏目ID"`
	UserId         uint        `orm:"user_id"          json:"userId"         description:"用户ID"`
	AdoptedReplyId uint        `orm:"adopted_reply_id" json:"adoptedReplyId" description:"采纳的回复ID，问答模块有效"`
	Title          string      `orm:"title"            json:"title"          description:"标题"`
	Content        string      `orm:"content"          json:"content"        description:"内容"`
	Sort           uint        `orm:"sort"             json:"sort"           description:"排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶"`
	Brief          string      `orm:"brief"            json:"brief"          description:"摘要"`
	Thumb          string      `orm:"thumb"            json:"thumb"          description:"缩略图"`
	Tags           string      `orm:"tags"             json:"tags"           description:"标签名称列表，以JSON存储"`
	Referer        string      `orm:"referer"          json:"referer"        description:"内容来源，例如github/gitee"`
	Status         uint        `orm:"status"           json:"status"         description:"状态 0: 正常, 1: 禁用"`
	ReplyCount     uint        `orm:"reply_count"      json:"replyCount"     description:"回复数量"`
	ViewCount      uint        `orm:"view_count"       json:"viewCount"      description:"浏览数量"`
	ZanCount       uint        `orm:"zan_count"        json:"zanCount"       description:"赞"`
	CaiCount       uint        `orm:"cai_count"        json:"caiCount"       description:"踩"`
	CreatedAt      *gtime.Time `orm:"created_at"       json:"createdAt"      description:"创建时间"`
	UpdatedAt      *gtime.Time `orm:"updated_at"       json:"updatedAt"      description:"修改时间"`
}

// File is the golang structure for table file.
type File struct {
	Id        uint        `orm:"id,primary" json:"id"        description:"自增ID"`
	Name      string      `orm:"name"       json:"name"      description:"文件名称"`
	Src       string      `orm:"src"        json:"src"       description:"本地文件存储路径"`
	Url       string      `orm:"url"        json:"url"       description:"URL地址，可能为空"`
	UserId    uint        `orm:"user_id"    json:"userId"    description:"操作用户"`
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt" description:""`
}

// Interact is the golang structure for table interact.
type Interact struct {
	Id         uint        `orm:"id,primary"  json:"id"         description:"自增ID"`
	Type       int         `orm:"type"        json:"type"       description:"操作类型。0:赞，1:踩。"`
	UserId     uint        `orm:"user_id"     json:"userId"     description:"操作用户"`
	TargetId   uint        `orm:"target_id"   json:"targetId"   description:"对应内容ID，该内容可能是content, reply"`
	TargetType string      `orm:"target_type" json:"targetType" description:"内容模型: content, reply, 具体由程序定义"`
	Count      uint        `orm:"count"       json:"count"      description:"操作数据值"`
	CreatedAt  *gtime.Time `orm:"created_at"  json:"createdAt"  description:""`
	UpdatedAt  *gtime.Time `orm:"updated_at"  json:"updatedAt"  description:""`
}

// Reply is the golang structure for table reply.
type Reply struct {
	Id         uint        `orm:"id,primary"  json:"id"         description:"回复ID"`
	ParentId   uint        `orm:"parent_id"   json:"parentId"   description:"回复对应的上一级回复ID(没有的话默认为0)"`
	Title      string      `orm:"title"       json:"title"      description:"回复标题"`
	Content    string      `orm:"content"     json:"content"    description:"回复内容"`
	TargetType string      `orm:"target_type" json:"targetType" description:"评论类型: content, reply"`
	TargetId   uint        `orm:"target_id"   json:"targetId"   description:"对应内容ID，可能回复的是另一个回复，所以这里没有使用content_id"`
	UserId     uint        `orm:"user_id"     json:"userId"     description:"网站用户ID"`
	ZanCount   uint        `orm:"zan_count"   json:"zanCount"   description:"赞"`
	CaiCount   uint        `orm:"cai_count"   json:"caiCount"   description:"踩"`
	CreatedAt  *gtime.Time `orm:"created_at"  json:"createdAt"  description:"创建时间"`
	UpdatedAt  *gtime.Time `orm:"updated_at"  json:"updatedAt"  description:""`
}

// Setting is the golang structure for table setting.
type Setting struct {
	K         string      `orm:"k,primary"  json:"k"         description:"键名"`
	V         string      `orm:"v"          json:"v"         description:"键值"`
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt" description:"创建时间"`
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt" description:"更新时间"`
}

// User is the golang structure for table user.
type User struct {
	Id        uint        `orm:"id,primary"      json:"id"        description:"UID"`
	Passport  string      `orm:"passport,unique" json:"passport"  description:"账号"`
	Password  string      `orm:"password"        json:"password"  description:"MD5密码"`
	Nickname  string      `orm:"nickname,unique" json:"nickname"  description:"昵称"`
	Avatar    string      `orm:"avatar"          json:"avatar"    description:"头像地址"`
	Status    int         `orm:"status"          json:"status"    description:"状态 0:启用 1:禁用"`
	Gender    int         `orm:"gender"          json:"gender"    description:"性别 0: 未设置 1: 男 2: 女"`
	CreatedAt *gtime.Time `orm:"created_at"      json:"createdAt" description:"注册时间"`
	UpdatedAt *gtime.Time `orm:"updated_at"      json:"updatedAt" description:"更新时间"`
}
