// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

// CategoryForDao is the golang structure of table gf_category for DAO operations like Where/Data.
type CategoryForDao struct {
	Id          interface{} `orm:"id,primary"`   // 分类ID，自增主键
	ContentType interface{} `orm:"content_type"` // 内容类型：topic, ask, article, reply
	Key         interface{} `orm:"key"`          // 栏目唯一键名，用于程序部分场景硬编码，一般不会用得到
	ParentId    interface{} `orm:"parent_id"`    // 父级分类ID，用于层级管理
	UserId      interface{} `orm:"user_id"`      // 创建的用户ID
	Name        interface{} `orm:"name"`         // 分类名称
	Sort        interface{} `orm:"sort"`         // 排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶
	Thumb       interface{} `orm:"thumb"`        // 封面图
	Brief       interface{} `orm:"brief"`        // 简述
	Content     interface{} `orm:"content"`      // 详细介绍
	CreatedAt   interface{} `orm:"created_at"`   // 创建时间
	UpdatedAt   interface{} `orm:"updated_at"`   // 修改时间
}

// ContentForDao is the golang structure of table gf_content for DAO operations like Where/Data.
type ContentForDao struct {
	Id             interface{} `orm:"id,primary"`       // 自增ID
	Key            interface{} `orm:"key"`              // 唯一键名，用于程序硬编码，一般不常用
	Type           interface{} `orm:"type"`             // 内容模型: topic, ask, article等，具体由程序定义
	CategoryId     interface{} `orm:"category_id"`      // 栏目ID
	UserId         interface{} `orm:"user_id"`          // 用户ID
	AdoptedReplyId interface{} `orm:"adopted_reply_id"` // 采纳的回复ID，问答模块有效
	Title          interface{} `orm:"title"`            // 标题
	Content        interface{} `orm:"content"`          // 内容
	Sort           interface{} `orm:"sort"`             // 排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶
	Brief          interface{} `orm:"brief"`            // 摘要
	Thumb          interface{} `orm:"thumb"`            // 缩略图
	Tags           interface{} `orm:"tags"`             // 标签名称列表，以JSON存储
	Referer        interface{} `orm:"referer"`          // 内容来源，例如github/gitee
	Status         interface{} `orm:"status"`           // 状态 0: 正常, 1: 禁用
	ReplyCount     interface{} `orm:"reply_count"`      // 回复数量
	ViewCount      interface{} `orm:"view_count"`       // 浏览数量
	ZanCount       interface{} `orm:"zan_count"`        // 赞
	CaiCount       interface{} `orm:"cai_count"`        // 踩
	CreatedAt      interface{} `orm:"created_at"`       // 创建时间
	UpdatedAt      interface{} `orm:"updated_at"`       // 修改时间
}

// FileForDao is the golang structure of table gf_file for DAO operations like Where/Data.
type FileForDao struct {
	Id        interface{} `orm:"id,primary"` // 自增ID
	Name      interface{} `orm:"name"`       // 文件名称
	Src       interface{} `orm:"src"`        // 本地文件存储路径
	Url       interface{} `orm:"url"`        // URL地址，可能为空
	UserId    interface{} `orm:"user_id"`    // 操作用户
	CreatedAt interface{} `orm:"created_at"` //
}

// InteractForDao is the golang structure of table gf_interact for DAO operations like Where/Data.
type InteractForDao struct {
	Id         interface{} `orm:"id,primary"`  // 自增ID
	Type       interface{} `orm:"type"`        // 操作类型。0:赞，1:踩。
	UserId     interface{} `orm:"user_id"`     // 操作用户
	TargetId   interface{} `orm:"target_id"`   // 对应内容ID，该内容可能是content, reply
	TargetType interface{} `orm:"target_type"` // 内容模型: content, reply, 具体由程序定义
	Count      interface{} `orm:"count"`       // 操作数据值
	CreatedAt  interface{} `orm:"created_at"`  //
	UpdatedAt  interface{} `orm:"updated_at"`  //
}

// ReplyForDao is the golang structure of table gf_reply for DAO operations like Where/Data.
type ReplyForDao struct {
	Id         interface{} `orm:"id,primary"`  // 回复ID
	ParentId   interface{} `orm:"parent_id"`   // 回复对应的上一级回复ID(没有的话默认为0)
	Title      interface{} `orm:"title"`       // 回复标题
	Content    interface{} `orm:"content"`     // 回复内容
	TargetType interface{} `orm:"target_type"` // 评论类型: content, reply
	TargetId   interface{} `orm:"target_id"`   // 对应内容ID，可能回复的是另一个回复，所以这里没有使用content_id
	UserId     interface{} `orm:"user_id"`     // 网站用户ID
	ZanCount   interface{} `orm:"zan_count"`   // 赞
	CaiCount   interface{} `orm:"cai_count"`   // 踩
	CreatedAt  interface{} `orm:"created_at"`  // 创建时间
	UpdatedAt  interface{} `orm:"updated_at"`  //
}

// SettingForDao is the golang structure of table gf_setting for DAO operations like Where/Data.
type SettingForDao struct {
	K         interface{} `orm:"k,primary"`  // 键名
	V         interface{} `orm:"v"`          // 键值
	CreatedAt interface{} `orm:"created_at"` // 创建时间
	UpdatedAt interface{} `orm:"updated_at"` // 更新时间
}

// UserForDao is the golang structure of table gf_user for DAO operations like Where/Data.
type UserForDao struct {
	Id        interface{} `orm:"id,primary"`      // UID
	Passport  interface{} `orm:"passport,unique"` // 账号
	Password  interface{} `orm:"password"`        // MD5密码
	Nickname  interface{} `orm:"nickname,unique"` // 昵称
	Avatar    interface{} `orm:"avatar"`          // 头像地址
	Status    interface{} `orm:"status"`          // 状态 0:启用 1:禁用
	Gender    interface{} `orm:"gender"`          // 性别 0: 未设置 1: 男 2: 女
	CreatedAt interface{} `orm:"created_at"`      // 注册时间
	UpdatedAt interface{} `orm:"updated_at"`      // 更新时间
}
